@inject StateContainer stateContainer
@inject IConfiguration render

<g transform="scale(@stateContainer.tempZoomA)">
    @if (stateContainer.selectedLabel == couplingS?.Name) //selected coupling is blue
    {
        <path fill="none" stroke-width="5" stroke=@render["fnStyle"+stateContainer.newFnStyle+":Properties:selected-fill"] opacity="0.5" d=@couplingS.curve2 />
    }
    else //remaining couplings are grey
    {
        //update stroke colour if part of FMI
        <path fill="none" stroke-width="2" stroke="#999999" opacity="0.75" d=@couplingS?.curve2 />
    }
    <g transform="scale(@(stateContainer.tempZoomA))" display="@stateContainer.AspectLabelsDisplay" class="@aspectClass" @onmousedown="SelectLabel" @onmouseup="MoveLabelStop">
        <rect x=@(couplingS?.labelX - couplingS?.Twidth / 2) y=@couplingS?.labelY width=@couplingS?.Twidth height=@(Math.Min(5 + (couplingS?.displayText.Count??1) * 8, 50)) style="fill: #FFFFFF; stroke: none; opacity: 0.6" rx="5" ry="5" />
        <text transform="translate(0,-2)" x=@couplingS?.labelX y=@(couplingS?.labelY + 3) font-size="5pt" text-anchor="middle" font-family="'PT Sans Caption', sans-serif">
            @for (int i = 0; i < couplingS?.displayText.Count; i++)
            {
                <tspan x=@couplingS.labelX dy="8">@couplingS.displayText[i]</tspan>
            }
        </text>
    </g>
</g>

@code {
    private bool dragAspect = false;
    private string aspectClass = "fn-hover";

    [Parameter]
    public Coupling? couplingS { get; set; }
    [Parameter]
    public EventCallback refreshParent { get; set; }

    private void SelectLabel(MouseEventArgs e)
    {
        if (stateContainer.selectedFn != "-1" && stateContainer.functionList.Find(x => x.IDNr == stateContainer.selectedFn)?.label == "")
        {
            stateContainer.defaultFnLabel();
        }
        stateContainer.selectedLabel = couplingS?.Name??"";
        stateContainer.selectedFn = "-1";
        stateContainer.isDisabled = true;
        stateContainer.fnName = "";
        dragAspect = true;
        aspectClass = "fn-move";
        refreshParent.InvokeAsync();
    }
    private void MoveLabelStop(MouseEventArgs e)
    {
        if (dragAspect)
        {
            dragAspect = false;
            aspectClass = "fn-hover";
        }
    }
}
